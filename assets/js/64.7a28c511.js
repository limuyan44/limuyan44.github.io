(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{562:function(e,n,a){"use strict";a.r(n);var r=a(6),t=Object(r.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"配置pom-xml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置pom-xml"}},[e._v("#")]),e._v(" 配置pom.xml")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("    <properties>\n        <mybatis-spring-boot>1.2.0</mybatis-spring-boot>\n        <mysql-connector>5.1.39</mysql-connector>\n    </properties>\n\n    <dependencies>\n\n        \x3c!-- Spring Boot Web 依赖 --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        \x3c!-- Spring Boot Test 依赖 --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        \x3c!-- Spring Boot Mybatis 依赖 --\x3e\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n            <version>${mybatis-spring-boot}</version>\n        </dependency>\n\n        \x3c!-- MySQL 连接驱动依赖 --\x3e\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>${mysql-connector}</version>\n        </dependency>\n\n        \x3c!-- Junit --\x3e\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n        </dependency>\n")])])]),a("h3",{attrs:{id:"在application-properties配置连接信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在application-properties配置连接信息"}},[e._v("#")]),e._v(" 在application.properties配置连接信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("## 数据源配置\nspring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8\nspring.datasource.username=root\nspring.datasource.password=root\nspring.datasource.driver-class-name=com.mysql.jdbc.Driver\n\n## Mybatis 配置\nmybatis.typeAliasesPackage=com.zycat.springbootmybatisdemo.domain\nmybatis.mapperLocations=classpath:mapper/*.xml\n")])])]),a("h3",{attrs:{id:"采用xml配置的方式使用sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#采用xml配置的方式使用sql"}},[e._v("#")]),e._v(" 采用xml配置的方式使用sql")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("@Autowired\n    private UsrMmenusMapper usrMmenusMapper;\n    @Override\n    public UsrMmenus queryMenu(String menuid ) {\n        return  usrMmenusMapper.selectByPrimaryKey(menuid);\n    }\n")])])]),a("h3",{attrs:{id:"使用mybatisgenerator自动生成sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用mybatisgenerator自动生成sql"}},[e._v("#")]),e._v(" 使用mybatisgenerator自动生成sql")]),e._v(" "),a("h4",{attrs:{id:"配置pom-xml-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置pom-xml-2"}},[e._v("#")]),e._v(" 配置pom.xml")]),e._v(" "),a("p",[e._v("注：mysql的版本使用8.1的时候只会自动生成insert语句，环境低版本就好了。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("<build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n            \x3c!--mybatis-generator插件--\x3e\n            <plugin>\n                \x3c!--Mybatis-generator插件,用于自动生成Mapper和POJO--\x3e\n                <groupId>org.mybatis.generator</groupId>\n                <artifactId>mybatis-generator-maven-plugin</artifactId>\n                <version>1.3.2</version>\n                <configuration>\n                    \x3c!--配置文件的位置--\x3e\n                    <configurationFile>src/main/resources/conf/mybatis-generator-config.xml</configurationFile>\n                    <verbose>true</verbose>\n                    <overwrite>true</overwrite>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>Generate MyBatis Artifacts</id>\n                        <goals>\n                            <goal>generate</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.mybatis.generator</groupId>\n                        <artifactId>mybatis-generator-core</artifactId>\n                        <version>1.3.2</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>mysql</groupId>\n                        <artifactId>mysql-connector-java</artifactId>\n                        \x3c!--mysql 8.1的版本只能生成插入语句--\x3e\n                        <version>${mysql-connector}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n")])])]),a("h3",{attrs:{id:"配置generatorconfig-xml文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置generatorconfig-xml文件"}},[e._v("#")]),e._v(" 配置generatorconfig.xml文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('<?xml version="1.0" encoding="UTF-8" ?>\n<!DOCTYPE generatorConfiguration PUBLIC\n        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"\n        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >\n<generatorConfiguration>\n\n    \x3c!-- 本地数据库驱动程序jar包的全路径 --\x3e\n    \x3c!--<classPathEntry location=""/>--\x3e\n\n    <context id="context" targetRuntime="MyBatis3">\n        <commentGenerator>\n            <property name="suppressAllComments" value="false"/>\n            <property name="suppressDate" value="true"/>\n        </commentGenerator>\n\n        \x3c!-- 数据库的相关配置 --\x3e\n        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/test?serverTimezone=GMT"\n                        userId="root" password="root"/>\n\n        <javaTypeResolver>\n            <property name="forceBigDecimals" value="false"/>\n        </javaTypeResolver>\n\n        \x3c!-- 实体类生成的位置 --\x3e\n        <javaModelGenerator targetPackage="com.zycat.springbootmybatisdemo.domain" targetProject="src/main/java">\n            <property name="enableSubPackages" value="false"/>\n            <property name="trimStrings" value="true"/>\n        </javaModelGenerator>\n\n        \x3c!-- *Mapper.xml 文件的位置 --\x3e\n        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">\n            <property name="enableSubPackages" value="false"/>\n        </sqlMapGenerator>\n\n        \x3c!-- Mapper 接口文件的位置 --\x3e\n        <javaClientGenerator targetPackage="com.zycat.springbootmybatisdemo.mapper"\n                             targetProject="src/main/java" type="XMLMAPPER">\n            <property name="enableSubPackages" value="false"/>\n        </javaClientGenerator>\n\n        \x3c!-- 相关表的配置 --\x3e\n        <table tableName="usr_mmenus" enableCountByExample="false" enableDeleteByExample="false" enableSelectByExample="false"\n               enableUpdateByExample="false" />\n    </context>\n</generatorConfiguration>\n')])])]),a("p",[e._v("最后，maven执行")]),e._v(" "),a("blockquote",[a("p",[e._v("mybatis-generator:generate -e 或者使用idea直接执行mybatis-generator这个plugin也可以。")])]),e._v(" "),a("p",[e._v("具体代码见github地址，"),a("a",{attrs:{href:"https://github.com/limuyan44/spring-boot-mybatis-demo",target:"_blank",rel:"noopener noreferrer"}},[e._v("点击跳转"),a("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);